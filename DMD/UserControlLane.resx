<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Switch.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAABQCAYAAAAOYsW+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAHdElNRQfiBRARAxVUtbapAAAD8klEQVRoQ+2aa0tiURSG
        +zB/qV+URVRkoEw3Miim6GJYVHQvKNAoCxRycPpgv2zPXu85x1mttZwWY+mXeeBhC49r7zoyjJ4c+U/K
        aPQmGvqU9qC9PuRb9CpqbdKPtCft3ZPuoaOjo+Hm5ib8KzRLe2T7pXub0CXBk66urtLx/qG9sn3TMxR4
        Temn/GzYb05nKBD7uby9oD2z/ekgCcJXke1PB0n+evD9/T0fNqXn9II9T4Fg4Tk0s9fh7DkKBIusebVg
        XeEZcmnBusIz1HVsbAxazYJ1hWcIjuXo0FxyeHwsuwXrCs8QzI3nEnOJsluwrvAMwcnJyXfKbsG6wjME
        Z2amw8z0TFwTZbdgXeEZgvm5fMjn57DORWW3YF3hGYKFQjFaSC2qbsG6wjME5+fnU79jld2CdYVnCC4v
        L4clconWJdUtWFd4huBqqRRKpdWwuhrXqOwWrCs8Q3BtbS2sr61jJWW3YF3hGYIbGz+iG91VdgvWFZ4h
        uL29Hd0KW7RubaluwbrCMwTL5XLYi5bLe3gsuwXrCs8Q3N/f73pwsK+6BesKzxA8PDoKR/AQq+wWrCs8
        Q/D09DR6Ak/iY9ktWFd4huDl5UW4uIimq+wWrCs8Q5DeJ3Nlt2Bd4RmCt3d34S56e5ussluwrvAMwWq1
        Gmq1aqjWaqEWH8tuwbrCMwQfHh66Pj4+qG7BusIzBJ+fn98puwXrCs8QbDQbodFohmaziVV2C9YVniH4
        0noJLfIlWWW3YF3hGYLtdju0f0XTVXYL1hWeIfj29pbaCZ24ym7BusIzBOnQTjyUDqbHsluwrvAMQfym
        nSEc3OkklxmXO/4AsluwrvAMQbrM9Nomv/WgX2P81omyW7Cu8AxBury41OnhsluwrvAMwT+v78APTg5M
        /kkN8ODX19d3ym7BusIzBFutn9FWV9ktWFd4hiD+d4o28b9UQ3UL1hWeIfj09BTqdbIe6k911S1YV3iG
        IN29I2u1RNktWFd4hiDe6GVv+Ab5Zu/6+vqdsluwrvAMwfOz83B2dgbPo7JbsK7wDMFj+tx0fBzX48F+
        dqrQJ8VK8mmxUqmobsG6wjMEd3Z34e7uDpTdgnWFZwhubm4yB3grIrvpMvCbLyu43bQSLeGx7BasKzxD
        cHFhES4sJqvsFqwrPEOwWCiGYrEQ1wHfy8zn6e5tdJbWWdUtWFd4huDU1HR0Ck5HZbdgXeEZguMT42Ei
        SispuwXrCs8QzGV/COnxlxgL1hWeIUiH5YZx8EdasK7oOTS0vy0SnsN7HUqw5ykQvopsfzpIgkB36j4b
        cfdPMbTvCAztWxHEUL4HQgztmy8ZdEnwmvcp7dHz8g6BkZHfaNfuICaZUq4AAAAASUVORK5CYII=
</value>
  </data>
</root>